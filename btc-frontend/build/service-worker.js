"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","42d53facb2ba0ac569de1f93b675a01e"],["static/css/main.d97b1969.css","22b6ea3b98f2ae7a8c18cd56d441d59f"],["static/js/main.de1465a1.js","b7f198a1686eed3c57eee473e9a8a5d7"],["static/media/black_tea.610f094b.jpg","610f094be0cd4bb60f319655a375c7fa"],["static/media/glyphicons-halflings-regular.448c34a5.woff2","448c34a56d699c29117adc64c43affeb"],["static/media/glyphicons-halflings-regular.89889688.svg","89889688147bd7575d6327160d64e760"],["static/media/glyphicons-halflings-regular.e18bbf61.ttf","e18bbf611f2a2e43afc071aa2f4e1512"],["static/media/glyphicons-halflings-regular.f4769f9b.eot","f4769f9bdb7466be65088239c12046d1"],["static/media/glyphicons-halflings-regular.fa277232.woff","fa2772327f55d8198301fdb8bcfc8158"],["static/media/green_tea.ba9c19bc.jpg","ba9c19bc8ca06ef79722c381d95c9466"],["static/media/juice_tea.ec4e58b2.jpg","ec4e58b2b7ba7c1e8efbfd8ef0833a3e"],["static/media/kiwi.60e07467.jpg","60e074672965fcde14eae921485bfa3c"],["static/media/large.74432bdc.jpg","74432bdce807f23e3bab84af67d05c84"],["static/media/lychee.3a2a9c8e.jpg","3a2a9c8ebba657b0249de91c576b5ed8"],["static/media/lychee_jelly.a3ce6892.jpg","a3ce68925a0d2a172a6a1837cd819252"],["static/media/mango.ab6c5660.jpg","ab6c56605d3aa4bab914b20c75fdb213"],["static/media/medium.370d7b96.jpg","370d7b964c6634a13cbce1a7f211f223"],["static/media/milk_tea.c9a83bc8.jpg","c9a83bc842f8382663853e9529c0f013"],["static/media/mocha.9529009e.jpg","9529009e9c603e3ca54374d96472f67d"],["static/media/pearls.f96c646b.jpg","f96c646bda9e326aefd70dec1d40534a"],["static/media/protein.1cdc4c67.jpg","1cdc4c67b2eeae8b193be1894f5836b5"],["static/media/taro.51b1150d.jpg","51b1150dd2ffc5c0422576af57c22dde"],["static/media/thai.0035c783.jpg","0035c78399540308477b3be8145c51fd"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var c=new Request(t,{credentials:"same-origin"});return fetch(c).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);a=urlsToCacheKeys.has(t);a||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});